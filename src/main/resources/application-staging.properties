# Staging Environment Configuration
server.port=8080
server.servlet.context-path=/

# Application Configuration
spring.application.name=product-service

# Azure AI Search Configuration (Staging)
azure.search.endpoint=${AZURE_SEARCH_ENDPOINT:https://product-search-staging.search.windows.net}
azure.search.api-key=${AZURE_SEARCH_API_KEY:staging-api-key}
azure.search.index-name=${AZURE_SEARCH_INDEX_NAME:productsearch-staging-index}

# Logging Configuration for Staging
logging.level.com.example.productservice=INFO
logging.level.com.azure.search=INFO
logging.level.org.springframework.web=WARN
logging.level.org.springframework.boot=WARN
logging.level.org.springdoc=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Jackson Configuration for JSON-LD
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.default-property-inclusion=NON_NULL

# CORS Configuration for Staging
spring.web.cors.allowed-origins=https://staging.yourdomain.com,https://staging-api.yourdomain.com
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Swagger/OpenAPI Configuration for Staging
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.try-it-out-enabled=true

# OpenAPI Info
springdoc.api-docs.info.title=Product Service API (Staging)
springdoc.api-docs.info.description=A Spring Boot microservice that provides product information via REST API with JSON-LD format and Azure AI Search integration - Staging Environment
springdoc.api-docs.info.version=1.0.0-staging
springdoc.api-docs.info.contact.name=Product Service Team
springdoc.api-docs.info.contact.email=support@example.com
springdoc.api-docs.info.license.name=MIT License
springdoc.api-docs.info.license.url=https://opensource.org/licenses/MIT

# Staging specific settings
server.tomcat.threads.max=100
server.tomcat.threads.min-spare=10
server.tomcat.max-connections=1000
server.tomcat.accept-count=50

# Health check configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.health.defaults.enabled=true

# Staging monitoring
management.metrics.export.azuremonitor.enabled=true
management.metrics.export.azuremonitor.namespace=product-service-staging
